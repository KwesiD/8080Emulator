
//0x17	RAL	1	CY	A = A << 1; bit 0 = prev CY; CY = prev bit 7

//0x1f	RAR	1	CY	A = A >> 1; bit 7 = prev bit 7; CY = prev bit 0
0x20	RIM	1		special

//0x22	SHLD adr	3		(adr) <-L; (adr+1)<-H

0x27	DAA	1		special

//0x2a	LHLD adr	3		L <- (adr); H<-(adr+1)


//0x2f	CMA	1		A <- !A
0x30	SIM	1		special


//0x3f	CMC	1	CY	CY=!CY

0x76	HLT	1		special

/**
0x80	ADD B	1	Z, S, P, CY, AC	A <- A + B
0x81	ADD C	1	Z, S, P, CY, AC	A <- A + C
0x82	ADD D	1	Z, S, P, CY, AC	A <- A + D
0x83	ADD E	1	Z, S, P, CY, AC	A <- A + E
0x84	ADD H	1	Z, S, P, CY, AC	A <- A + H
0x85	ADD L	1	Z, S, P, CY, AC	A <- A + L
0x86	ADD M	1	Z, S, P, CY, AC	A <- A + (HL)
0x87	ADD A	1	Z, S, P, CY, AC	A <- A + A
0x88	ADC B	1	Z, S, P, CY, AC	A <- A + B + CY
0x89	ADC C	1	Z, S, P, CY, AC	A <- A + C + CY
0x8a	ADC D	1	Z, S, P, CY, AC	A <- A + D + CY
0x8b	ADC E	1	Z, S, P, CY, AC	A <- A + E + CY
0x8c	ADC H	1	Z, S, P, CY, AC	A <- A + H + CY
0x8d	ADC L	1	Z, S, P, CY, AC	A <- A + L + CY
0x8e	ADC M	1	Z, S, P, CY, AC	A <- A + (HL) + CY
0x8f	ADC A	1	Z, S, P, CY, AC	A <- A + A + CY
0x90	SUB B	1	Z, S, P, CY, AC	A <- A - B
0x91	SUB C	1	Z, S, P, CY, AC	A <- A - C
0x92	SUB D	1	Z, S, P, CY, AC	A <- A + D
0x93	SUB E	1	Z, S, P, CY, AC	A <- A - E
0x94	SUB H	1	Z, S, P, CY, AC	A <- A + H
0x95	SUB L	1	Z, S, P, CY, AC	A <- A - L
0x96	SUB M	1	Z, S, P, CY, AC	A <- A + (HL)
0x97	SUB A	1	Z, S, P, CY, AC	A <- A - A
0x98	SBB B	1	Z, S, P, CY, AC	A <- A - B - CY
0x99	SBB C	1	Z, S, P, CY, AC	A <- A - C - CY
0x9a	SBB D	1	Z, S, P, CY, AC	A <- A - D - CY
0x9b	SBB E	1	Z, S, P, CY, AC	A <- A - E - CY
0x9c	SBB H	1	Z, S, P, CY, AC	A <- A - H - CY
0x9d	SBB L	1	Z, S, P, CY, AC	A <- A - L - CY
0x9e	SBB M	1	Z, S, P, CY, AC	A <- A - (HL) - CY
0x9f	SBB A	1	Z, S, P, CY, AC	A <- A - A - CY
**/

/**
0xb8	CMP B	1	Z, S, P, CY, AC	A - B
0xb9	CMP C	1	Z, S, P, CY, AC	A - C
0xba	CMP D	1	Z, S, P, CY, AC	A - D
0xbb	CMP E	1	Z, S, P, CY, AC	A - E
0xbc	CMP H	1	Z, S, P, CY, AC	A - H
0xbd	CMP L	1	Z, S, P, CY, AC	A - L
0xbe	CMP M	1	Z, S, P, CY, AC	A - (HL)
0xbf	CMP A	1	Z, S, P, CY, AC	A - A
**/



//	ACI D8	2	Z, S, P, CY, AC	A <- A + data + CY

//0xd0	RNC	1		if NCY, RET

//0xd3	OUT D8	2		special

//0xd4	CNC adr	3		if NCY, CALL adr

//0xd6	SUI D8	2	Z, S, P, CY, AC	A <- A - data



//0xda	JC adr	3		if CY, PC<-adr
//0xdb	IN D8	2		special
//0xdc	CC adr	3		if CY, CALL adr
		
//0xde	SBI D8	2	Z, S, P, CY, AC	A <- A - data - CY

0xe0	RPO	1		if PO, RET

0xe2	JPO adr	3		if PO, PC <- adr

0xe4	CPO adr	3		if PO, CALL adr


0xe8	RPE	1		if PE, RET

0xea	JPE adr	3		if PE, PC <- adr

0xec	CPE adr	3		if PE, CALL adr

0xee	XRI D8	2	Z, S, P, CY, AC	A <- A ^ data

0xf0	RP	1		if P, RET

0xf2	JP adr	3		if P=1 PC <- adr

0xf4	CP adr	3		if P, PC <- adr
 - 2
//0xf6	2 D8	2	Z, S, P, CY, AC	A <- A | data

0xf8	RM	1		if M, RET
0xf9	SPHL	1		SP=HL
//0xfa	JM adr	3		if M, PC <- adr

0xfc	CM adr	3		if M, CALL adr
